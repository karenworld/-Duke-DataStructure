public class CaesarCipher {

	public String encrypt(String input, int key) {
	// Make a StringBuilder with message (encrypted)
	StingBuilder encrypted = new StringBuilder(input);
	// Write down the alphabet
	String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	// Compute the shifted alphabet
	String shiftedAlphabet = alphabet.substring(key) + alphabet.substring(0, key);
	for (int i = 0; i < encrypted.length(); i++) {
	char currChar = encrypted.charAt(i);
	int idx = alphabet.indexOf(currChar);
	if (idx != -1){
	get the idx char of the ShiftedAlphabet(newChar)
	char newChar = shiftedAphabet.charAt(idx);
	// replace the ith character of encrypted with newChar
	encrypted.setCharAt(i, newChar);
	} 
	// Otherwise, do nothing	
	}	
	// answer is String inside of encrypted
	return encrypted.toString();
	}

	public void testCaesar(){
	int key = 17;
	FileResource fr = new FileResource();
	String message = fr.asString();
	String encrypted = encrypt(message, key);
	System.out.println(encrypted);
	String decrypted = encrypt(encrypted, 26-key);
	System.out.println(decrypted);
	}





 